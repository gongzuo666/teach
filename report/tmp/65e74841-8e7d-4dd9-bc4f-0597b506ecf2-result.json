{"name": "列出课程", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Invalid control character at: line 1 column 63 (char 62)", "trace": "self = <testCaseTeach.test_Lesson.TestLesson object at 0x0000000004CC5828>\ninData = '{\"action\":\"list_course\",\"pagenum\":\"\",\"pagesize\":\"20\"}'\nrepsData = '{\"retcode\": 500, \"reason\": \"Traceback (most recent call last):\\n  File \"G:\\\\SQ资料区\\\\松勤自动化课程\\\\Web-API课程\\\\安装文件\\\\restapi-...urse\\n    pagenum = int(request.param_dict[\\'pagenum\\'])\\nValueError: invalid literal for int() with base 10: \\'\\'\\n\"}'\n\n    @allure.severity(\"normal\")\n    @allure.story('列出课程')\n    @allure.title('列出课程')\n    @pytest.mark.lesson_list # 标签--\n    @pytest.mark.parametrize('inData,repsData', get_excelData('2-课程模块',27,38,6,8))\n    def test_list_lesson(self,inData,repsData):\n        res = LessonClass().list_lesson(self.session,json.loads(inData))\n>       assert json.loads(res)['retcode'] == json.loads(repsData)['retcode']\n\ntest_Lesson.py:60: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nc:\\python3.6.6\\lib\\json\\__init__.py:354: in loads\n    return _default_decoder.decode(s)\nc:\\python3.6.6\\lib\\json\\decoder.py:339: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x0000000003770080>\ns = '{\"retcode\": 500, \"reason\": \"Traceback (most recent call last):\\n  File \"G:\\\\SQ资料区\\\\松勤自动化课程\\\\Web-API课程\\\\安装文件\\\\restapi-...urse\\n    pagenum = int(request.param_dict[\\'pagenum\\'])\\nValueError: invalid literal for int() with base 10: \\'\\'\\n\"}'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Invalid control character at: line 1 column 63 (char 62)\n\nc:\\python3.6.6\\lib\\json\\decoder.py:355: JSONDecodeError"}, "parameters": [{"name": "inData", "value": "'{\"action\":\"list_course\",\"pagenum\":\"\",\"pagesize\":\"20\"}'"}, {"name": "repsData", "value": "'{\"retcode\": 500, \"reason\": \"Traceback (most recent call last):\n  File \"G:\\SQ资料区\\松勤自动化课程\\Web-API课程\\安装文件\\restapi-teach\\backend\\lib\\common.py\", line 69, in dispatch\n    return handler(request, *args, **kwargs)\n  File \"G:\\SQ资料区\\松勤自动化课程\\Web-API课程\\安装文件\\restapi-teach\\backend\\apps\\mgr\\handlers\\mgr.py\", line 82, in handle_list_course\n    pagenum = int(request.param_dict['pagenum'])\nValueError: invalid literal for int() with base 10: ''\n\"}'"}], "start": 1604384746976, "stop": 1604384746979, "uuid": "1a877d16-f9e6-46d8-8359-510a6be2dabf", "historyId": "14404d49294061b2f560319a683ff12f", "testCaseId": "e41d056a9a9d54dcbbd201cd41f6ae43", "fullName": "test_Lesson.TestLesson#test_list_lesson[{\"action\":\"list_course\",\"pagenum\":\"\",\"pagesize\":\"20\"}-{\"retcode\": 500, \"reason\": \"Traceback (most recent call last):\n  File \"G:\\SQ资料区\\松勤自动化课程\\Web-API课程\\安装文件\\restapi-teach\\backend\\lib\\common.py\", line 69, in dispatch\n    return handler(request, *args, **kwargs)\n  File \"G:\\SQ资料区\\松勤自动化课程\\Web-API课程\\安装文件\\restapi-teach\\backend\\apps\\mgr\\handlers\\mgr.py\", line 82, in handle_list_course\n    pagenum = int(request.param_dict", "labels": [{"name": "story", "value": "列出课程"}, {"name": "severity", "value": "normal"}, {"name": "feature", "value": "课程模块"}, {"name": "tag", "value": "lesson_list"}, {"name": "tag", "value": "Lesson(order=2)"}, {"name": "suite", "value": "test_Lesson"}, {"name": "subSuite", "value": "TestLesson"}, {"name": "host", "value": "SKY-20170828DBR"}, {"name": "thread", "value": "10820-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_Lesson"}]}